package ru.examole.chat;

public class ServerApp {


    //todo открепить сетевую логику в клиенте от самого клиента -> создаём класс нетворк с методами коннект и дисконект
    // вводим функциональный  интерфейс калбэк сетодом колбык, принимающим обджекты, создаём в классе нетворк 2 этих интерефейчас ,
    // один аутентификационный, второй для сообщений, коннект колбэк, дисконект колбэк, устанавливаем на него сеттеры

    //todo добавить логгирование, через логгер
    //todo возвращать из Бд Optional

    //todo реализовать вариант хистори менеджера на клиенте, с исрользованием буффередридера и буффередрайтера - 5й урок, конец занятия
    // в файлрайтере передать второй аргумент, аппенд-тру, чтобы файл не перезаписывался, а добалялись записи

    //todo *** добавить реализации консольного варианта клиента, для понимания работы колбэка
    //todo *** возможен более сложный вариант с сохранением истории в БД, сохраняя от кого кому были сообщения
    //todo *** можно реализовать команду на серваке, при которой он присылает историю с указанием кол-ва строк, которое хотим получить
    //todo *** реализовать отображение возможных служебных команд при вызове или назатии кнопки
    //todo ***** применить экзекьютер сервис на сервере, для создания потоков
    //todo *** регистрация в чате
    //todo *** на будущее кажется логично вынести логики с именем клиентХэндлера в БД ?
    //todo *** сборка проекта в аозможностью запуска на винде
    public static void main(String[] args) {
        new Server(8189);
    }
}
